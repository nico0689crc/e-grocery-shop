services:
  nats-server:
    image: nats:latest
    ports:
      - ${NATS_SERVER_HOST_PORT}:${NATS_SERVER_CONTAINER_PORT}
    networks:
      - e-grocery-network-prod
      
  ##################################################################################
  #   AUTHENTICATION MS - Setup Database Container
  ##################################################################################

  authentication-ms-database:
    container_name: authentication-ms-database-prod
    image: postgres:14.3
    environment:
      - POSTGRES_DB=${AUTHENTICATION_MS_BACKEND_POSTGRES_DB}
      - POSTGRES_USER=${AUTHENTICATION_MS_BACKEND_POSTGRES_USER}
      - POSTGRES_PASSWORD=${AUTHENTICATION_MS_BACKEND_POSTGRES_PASSWORD}
    ports:
      - "${AUTHENTICATION_MS_BACKEND_POSTGRES_HOST_PORT}:${AUTHENTICATION_MS_BACKEND_POSTGRES_CONTAINER_PORT}"
    volumes:
      - authentication-ms-prod-db:/var/lib/postgresql/data
    networks:
      - authentication-ms-network-prod

  ##################################################################################
  #   AUTHENTICATION MS - Setup Backend Container
  ##################################################################################

  authentication-ms-backend:
    depends_on:
      - authentication-ms-database
    container_name: authentication-ms-backend-prod
    image: ${DOCKER_HUB_USERNAME}/${DOCKER_HUB_AUTHENTICATION_MS_BACKEND_IMAGE}:dev
    build:
      context: ./backend/authentication-ms
      target: production
    environment:
      - AUTHENTICATION_MS_BACKEND_CONTAINER_PORT=${AUTHENTICATION_MS_BACKEND_CONTAINER_PORT}
      - AUTHENTICATION_MS_BACKEND_HOST_PORT=${AUTHENTICATION_MS_BACKEND_HOST_PORT}
      - AUTHENTICATION_MS_BACKEND_POSTGRES_HOST=${AUTHENTICATION_MS_BACKEND_POSTGRES_HOST}
      - AUTHENTICATION_MS_BACKEND_POSTGRES_DB=${AUTHENTICATION_MS_BACKEND_POSTGRES_DB}
      - AUTHENTICATION_MS_BACKEND_POSTGRES_USER=${AUTHENTICATION_MS_BACKEND_POSTGRES_USER}
      - AUTHENTICATION_MS_BACKEND_POSTGRES_PASSWORD=${AUTHENTICATION_MS_BACKEND_POSTGRES_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - AUTHENTICATION_MS_BACKEND_USERS_PASSWORDS=${AUTHENTICATION_MS_BACKEND_USERS_PASSWORDS}
      - NATS_SERVERS=${NATS_SERVERS}
    ports:
      - "${AUTHENTICATION_MS_BACKEND_HOST_PORT}:${AUTHENTICATION_MS_BACKEND_CONTAINER_PORT}"
    expose:
      - 3000
    networks:
      - authentication-ms-network-prod
      - e-grocery-network-prod
  ##################################################################################
  #   PRODUCTS MS - Setup Database Container
  ##################################################################################

  products-ms-database:
    container_name: products-ms-database-prod
    image: postgres:14.3
    environment:
      - POSTGRES_DB=${PRODUCTS_MS_BACKEND_POSTGRES_DB}
      - POSTGRES_USER=${PRODUCTS_MS_BACKEND_POSTGRES_USER}
      - POSTGRES_PASSWORD=${PRODUCTS_MS_BACKEND_POSTGRES_PASSWORD}
    ports:
      - "${PRODUCTS_MS_BACKEND_POSTGRES_HOST_PORT}:${PRODUCTS_MS_BACKEND_POSTGRES_CONTAINER_PORT}"
    volumes:
      - products-ms-prod-db:/var/lib/postgresql/data
    networks:
      - products-ms-network-prod

  ##################################################################################
  #   PRODUCTS MS - Setup Backend Container
  ##################################################################################

  products-ms-backend:
    depends_on:
      - products-ms-database
    container_name: products-ms-backend-prod
    image: ${DOCKER_HUB_USERNAME}/${DOCKER_HUB_PRODUCTS_MS_BACKEND_IMAGE}:dev
    build:
      context: ./backend/products-ms
      target: production
    environment:
      - PRODUCTS_MS_BACKEND_CONTAINER_PORT=${PRODUCTS_MS_BACKEND_CONTAINER_PORT}
      - PRODUCTS_MS_BACKEND_HOST_PORT=${PRODUCTS_MS_BACKEND_HOST_PORT}
      - PRODUCTS_MS_BACKEND_POSTGRES_CONTAINER_PORT=${PRODUCTS_MS_BACKEND_POSTGRES_CONTAINER_PORT}
      - PRODUCTS_MS_BACKEND_POSTGRES_HOST=${PRODUCTS_MS_BACKEND_POSTGRES_HOST}
      - PRODUCTS_MS_BACKEND_POSTGRES_DB=${PRODUCTS_MS_BACKEND_POSTGRES_DB}
      - PRODUCTS_MS_BACKEND_POSTGRES_USER=${PRODUCTS_MS_BACKEND_POSTGRES_USER}
      - PRODUCTS_MS_BACKEND_POSTGRES_PASSWORD=${PRODUCTS_MS_BACKEND_POSTGRES_PASSWORD}
      - NATS_SERVERS=${NATS_SERVERS}
    ports:
      - "${PRODUCTS_MS_BACKEND_HOST_PORT}:${PRODUCTS_MS_BACKEND_CONTAINER_PORT}"
    expose:
      - 3000
    networks:
      - products-ms-network-prod
      - e-grocery-network-prod

  ##################################################################################
  #   CLIENT GATEWAY - Setup 
  ##################################################################################

  client-gateway-backend:
    depends_on:
      - authentication-ms-backend
      - products-ms-backend
    container_name: client-gateway-backend-prod
    image: ${DOCKER_HUB_USERNAME}/${DOCKER_HUB_CLIENT_GATEWAY_BACKEND_IMAGE}:dev
    build:
      context: ./backend/client-gateway
      target: production
    environment:
      - CLIENT_GATEWAY_BACKEND_HOST_PORT=${CLIENT_GATEWAY_BACKEND_HOST_PORT}
      - CLIENT_GATEWAY_BACKEND_CONTAINER_PORT=${CLIENT_GATEWAY_BACKEND_CONTAINER_PORT}
    ports:
      - "${CLIENT_GATEWAY_BACKEND_HOST_PORT}:${CLIENT_GATEWAY_BACKEND_CONTAINER_PORT}"
    volumes:
      - type: bind
        source: ./backend/client-gateway
        target: /app
      - /app/node_modules
    networks:
      - e-grocery-network-prod

  ##################################################################################
  #   E-GROCERY-SHOP - Setup Frontend Container - E-Grocery-Shop
  ##################################################################################

  # e-grocery-shop-frontend:
  #   depends_on:
  #     - client-gateway-backend 
  #   container_name: e-grocery-shop-frontend-prod
  #   image: ${DOCKER_HUB_USERNAME}/${DOCKER_HUB_E_GROCERY_SHOP_IMAGE}:dev
  #   build:
  #     context: ./frontend/e-grocery-shop
  #     target: production
  #   environment:
  #     - NEXT_PUBLIC_BACKEND_HOST_DOMAIN=${BACKEND_HOST_DOMAIN}
  #   ports:
  #     - "${E_GROCERY_SHOP_HOST_PORT}:${E_GROCERY_SHOP_CONTAINER_PORT}"
  #   volumes:
  #     - type: bind
  #       source: ./frontend/e-grocery-shop
  #       target: /app
  #     - /app/node_modules
  #   # command: npm run dev
  #   networks:
  #     - e-grocery-network-prod
volumes:
  authentication-ms-prod-db:
  products-ms-prod-db:
networks:
  authentication-ms-network-prod:
  e-grocery-network-prod:
  products-ms-network-prod: